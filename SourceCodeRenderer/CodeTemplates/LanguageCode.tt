<#@ template language="C#" inherits="NLanguageTag.SourceCodeRenderer.RenderContext" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="NLanguageTag.SourceCodeRenderer" #>
<#@ import namespace="NLanguageTag.SourceCodeRenderer.SubtagRegistry" #>
<#@ output extension=".cs" #>
using System;

namespace NLanguageTag
{
	/// <summary>
	/// Enum code of <see cref="Language"/> to use as constants in C#
	/// </summary>
	public enum LanguageCode
	{
		/// <summary>
		/// For private use
		/// </summary>
		PrivateUse = 0,

<#
   foreach(var entry in Registry.PrimaryLanguages.OrderBy(_ => _.Subtag, StringComparer.OrdinalIgnoreCase))
	{ #>
		/// <summary>
		/// code of <see cref="Language.<#= entry.CSharp_Name() #>"/>
		/// </summary>
<#if(entry.Deprecated != null)
  { #>
		[Obsolete("similarly Language.<#= entry.CSharp_Name() #>")]
<# } #>
		<#= entry.CSharp_Name() #> = <#= LanguageCode.TryGet(entry.Subtag)?.ToString()??"#error code not found" #>,

<# } #>
	}
}

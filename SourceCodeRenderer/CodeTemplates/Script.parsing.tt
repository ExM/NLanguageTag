<#@ template language="C#" inherits="NLanguageTag.SourceCodeRenderer.RenderContext" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="NLanguageTag.SourceCodeRenderer" #>
<#@ import namespace="NLanguageTag.SourceCodeRenderer.SubtagRegistry" #>
<#@ output extension=".cs" #>
using System;
using System.Globalization;

namespace NLanguageTag
{
	public partial class Script
	{
<#
var scriptSelector = new PrefixTreeSelector("TryParse", "Script?",
	Registry.Scripts.ToDictionary(
		_ => _.Subtag.ToLower(),
		_ => _.Subtag + "Cache.Instance"));
{
    var (minKey, maxKey) = Registry.PrivateUseScripts.AsInterval();
    scriptSelector.AddInterval(minKey.ToLowerInvariant(), maxKey.ToLowerInvariant(), "forPrivateUse(span.AsText())");
}
#>

<#foreach(var line in scriptSelector.Render())
{ #>
		<#= line #>
<# } #>
	}
}

<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using NUnit.Framework;

namespace NLanguageTag.Tests
{
	public partial class LanguageTagTests
	{
<#
foreach(var s in new bool[]{false, true})
foreach(var r in new bool[]{false, true})
foreach(var v in new bool[]{false, true})
foreach(var e in new bool[]{false, true})
foreach(var p in new bool[]{false, true})
{ #>

		[Test]
		public void Constructor_Lang<#
		if(s) {#>Scr<# };
		if(r) {#>Reg<# };
		if(v) {#>Var<# };
		if(e) {#>Exr<# };
		if(p) {#>Pr<# } #>()
		{
			var tag1 = new LanguageTag(Language.RU<#
		if(s) {#>, Script.Latn<# };
		if(r) {#>, Region.RU<# };
		if(v) {#>, new []{ Variant.Petr1708 }<# };
		if(e) {#>, new []{ new ExtensionSubtag('a', "aaa") }<# };
		if(p) {#>, ExtensionSubtag.ForPrivateUse("aaa")<# } #>);
			var tag2 = new LanguageTag(Language.RU<#
		if(s) {#>, Script.Latn<# } else {#>, null<# };
		if(r) {#>, Region.RU<# } else {#>, null<# };
		if(v) {#>, new []{ Variant.Petr1708 }<# } else {#>, new Variant[]{}<# };
		if(e) {#>, new []{ new ExtensionSubtag('a', "aaa") }<# } else {#>, new ExtensionSubtag[]{}<# };
		if(p) {#>, ExtensionSubtag.ForPrivateUse("aaa")<# } else {#>, new ExtensionSubtag()<# };#>);
			var expected = LanguageTag.Parse("ru<#
		if(s) {#>-Latn<# };
		if(r) {#>-RU<# };
		if(v) {#>-Petr1708<# };
		if(e) {#>-a-aaa<# };
		if(p) {#>-x-aaa<# } #>");
			Assert.That(tag1, Is.EqualTo(expected));
			Assert.That(tag2, Is.EqualTo(expected));
		}
<# } #>
	}
}
